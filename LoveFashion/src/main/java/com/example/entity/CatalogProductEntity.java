package com.example.entity;
// Generated Dec 19, 2015 11:20:12 PM by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CatalogProductEntity generated by hbm2java
 */
@Entity
@Table(name = "catalog_product_entity", catalog = "lovefashion")
public class CatalogProductEntity implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer entityId;
	private String typeId;
	private String sku;
	private Date createdAt;
	private Date updatedAt;
	private Set<CatalogProductEntityDatetime> catalogProductEntityDatetimes = new HashSet<CatalogProductEntityDatetime>(
			0);
	private Set<SalesBestsellersAggregatedYearly> salesBestsellersAggregatedYearlies = new HashSet<SalesBestsellersAggregatedYearly>(
			0);
	private Set<SalesBestsellersAggregatedDaily> salesBestsellersAggregatedDailies = new HashSet<SalesBestsellersAggregatedDaily>(
			0);
	private Set<CatalogProductEntityInt> catalogProductEntityInts = new HashSet<CatalogProductEntityInt>(0);
	private Set<CatalogProductEntityText> catalogProductEntityTexts = new HashSet<CatalogProductEntityText>(0);
	private Set<CataloginventoryStockStatus> cataloginventoryStockStatuses = new HashSet<CataloginventoryStockStatus>(
			0);
	private Set<CataloginventoryStockItem> cataloginventoryStockItems = new HashSet<CataloginventoryStockItem>(0);
	private Set<CatalogProductEntity> catalogProductEntitiesForParentId = new HashSet<CatalogProductEntity>(0);
	private Set<SalesBestsellersAggregatedMonthly> salesBestsellersAggregatedMonthlies = new HashSet<SalesBestsellersAggregatedMonthly>(
			0);
	private Set<CatalogProductEntityGallery> catalogProductEntityGalleries = new HashSet<CatalogProductEntityGallery>(
			0);
	private Set<CatalogProductEntityVarchar> catalogProductEntityVarchars = new HashSet<CatalogProductEntityVarchar>(0);
	private Set<WishlistItem> wishlistItems = new HashSet<WishlistItem>(0);
	private Set<CatalogProductEntity> catalogProductEntitiesForChildId = new HashSet<CatalogProductEntity>(0);
	private Set<CatalogProductEntityDecimal> catalogProductEntityDecimals = new HashSet<CatalogProductEntityDecimal>(0);
	private Set<CatalogCategoryProduct> catalogCategoryProducts = new HashSet<CatalogCategoryProduct>(0);

	public CatalogProductEntity() {
	}

	public CatalogProductEntity(String typeId) {
		this.typeId = typeId;
	}

	public CatalogProductEntity(String typeId, String sku, Date createdAt, Date updatedAt,
			Set<CatalogProductEntityDatetime> catalogProductEntityDatetimes,
			Set<SalesBestsellersAggregatedYearly> salesBestsellersAggregatedYearlies,
			Set<SalesBestsellersAggregatedDaily> salesBestsellersAggregatedDailies,
			Set<CatalogProductEntityInt> catalogProductEntityInts,
			Set<CatalogProductEntityText> catalogProductEntityTexts,
			Set<CataloginventoryStockStatus> cataloginventoryStockStatuses,
			Set<CataloginventoryStockItem> cataloginventoryStockItems,
			Set<CatalogProductEntity> catalogProductEntitiesForParentId,
			Set<SalesBestsellersAggregatedMonthly> salesBestsellersAggregatedMonthlies,
			Set<CatalogProductEntityGallery> catalogProductEntityGalleries,
			Set<CatalogProductEntityVarchar> catalogProductEntityVarchars, Set<WishlistItem> wishlistItems,
			Set<CatalogProductEntity> catalogProductEntitiesForChildId,
			Set<CatalogProductEntityDecimal> catalogProductEntityDecimals,
			Set<CatalogCategoryProduct> catalogCategoryProducts) {
		this.typeId = typeId;
		this.sku = sku;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.catalogProductEntityDatetimes = catalogProductEntityDatetimes;
		this.salesBestsellersAggregatedYearlies = salesBestsellersAggregatedYearlies;
		this.salesBestsellersAggregatedDailies = salesBestsellersAggregatedDailies;
		this.catalogProductEntityInts = catalogProductEntityInts;
		this.catalogProductEntityTexts = catalogProductEntityTexts;
		this.cataloginventoryStockStatuses = cataloginventoryStockStatuses;
		this.cataloginventoryStockItems = cataloginventoryStockItems;
		this.catalogProductEntitiesForParentId = catalogProductEntitiesForParentId;
		this.salesBestsellersAggregatedMonthlies = salesBestsellersAggregatedMonthlies;
		this.catalogProductEntityGalleries = catalogProductEntityGalleries;
		this.catalogProductEntityVarchars = catalogProductEntityVarchars;
		this.wishlistItems = wishlistItems;
		this.catalogProductEntitiesForChildId = catalogProductEntitiesForChildId;
		this.catalogProductEntityDecimals = catalogProductEntityDecimals;
		this.catalogCategoryProducts = catalogCategoryProducts;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "entity_id", unique = true, nullable = false)
	public Integer getEntityId() {
		return this.entityId;
	}

	public void setEntityId(Integer entityId) {
		this.entityId = entityId;
	}

	@Column(name = "type_id", nullable = false, length = 32)
	public String getTypeId() {
		return this.typeId;
	}

	public void setTypeId(String typeId) {
		this.typeId = typeId;
	}

	@Column(name = "sku", length = 64)
	public String getSku() {
		return this.sku;
	}

	public void setSku(String sku) {
		this.sku = sku;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEntityDatetime> getCatalogProductEntityDatetimes() {
		return this.catalogProductEntityDatetimes;
	}

	public void setCatalogProductEntityDatetimes(Set<CatalogProductEntityDatetime> catalogProductEntityDatetimes) {
		this.catalogProductEntityDatetimes = catalogProductEntityDatetimes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<SalesBestsellersAggregatedYearly> getSalesBestsellersAggregatedYearlies() {
		return this.salesBestsellersAggregatedYearlies;
	}

	public void setSalesBestsellersAggregatedYearlies(
			Set<SalesBestsellersAggregatedYearly> salesBestsellersAggregatedYearlies) {
		this.salesBestsellersAggregatedYearlies = salesBestsellersAggregatedYearlies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<SalesBestsellersAggregatedDaily> getSalesBestsellersAggregatedDailies() {
		return this.salesBestsellersAggregatedDailies;
	}

	public void setSalesBestsellersAggregatedDailies(
			Set<SalesBestsellersAggregatedDaily> salesBestsellersAggregatedDailies) {
		this.salesBestsellersAggregatedDailies = salesBestsellersAggregatedDailies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEntityInt> getCatalogProductEntityInts() {
		return this.catalogProductEntityInts;
	}

	public void setCatalogProductEntityInts(Set<CatalogProductEntityInt> catalogProductEntityInts) {
		this.catalogProductEntityInts = catalogProductEntityInts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEntityText> getCatalogProductEntityTexts() {
		return this.catalogProductEntityTexts;
	}

	public void setCatalogProductEntityTexts(Set<CatalogProductEntityText> catalogProductEntityTexts) {
		this.catalogProductEntityTexts = catalogProductEntityTexts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CataloginventoryStockStatus> getCataloginventoryStockStatuses() {
		return this.cataloginventoryStockStatuses;
	}

	public void setCataloginventoryStockStatuses(Set<CataloginventoryStockStatus> cataloginventoryStockStatuses) {
		this.cataloginventoryStockStatuses = cataloginventoryStockStatuses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CataloginventoryStockItem> getCataloginventoryStockItems() {
		return this.cataloginventoryStockItems;
	}

	public void setCataloginventoryStockItems(Set<CataloginventoryStockItem> cataloginventoryStockItems) {
		this.cataloginventoryStockItems = cataloginventoryStockItems;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "catalog_product_relation", catalog = "lovefashion", joinColumns = {
			@JoinColumn(name = "child_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "parent_id", nullable = false, updatable = false) })
	public Set<CatalogProductEntity> getCatalogProductEntitiesForParentId() {
		return this.catalogProductEntitiesForParentId;
	}

	public void setCatalogProductEntitiesForParentId(Set<CatalogProductEntity> catalogProductEntitiesForParentId) {
		this.catalogProductEntitiesForParentId = catalogProductEntitiesForParentId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<SalesBestsellersAggregatedMonthly> getSalesBestsellersAggregatedMonthlies() {
		return this.salesBestsellersAggregatedMonthlies;
	}

	public void setSalesBestsellersAggregatedMonthlies(
			Set<SalesBestsellersAggregatedMonthly> salesBestsellersAggregatedMonthlies) {
		this.salesBestsellersAggregatedMonthlies = salesBestsellersAggregatedMonthlies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEntityGallery> getCatalogProductEntityGalleries() {
		return this.catalogProductEntityGalleries;
	}

	public void setCatalogProductEntityGalleries(Set<CatalogProductEntityGallery> catalogProductEntityGalleries) {
		this.catalogProductEntityGalleries = catalogProductEntityGalleries;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEntityVarchar> getCatalogProductEntityVarchars() {
		return this.catalogProductEntityVarchars;
	}

	public void setCatalogProductEntityVarchars(Set<CatalogProductEntityVarchar> catalogProductEntityVarchars) {
		this.catalogProductEntityVarchars = catalogProductEntityVarchars;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<WishlistItem> getWishlistItems() {
		return this.wishlistItems;
	}

	public void setWishlistItems(Set<WishlistItem> wishlistItems) {
		this.wishlistItems = wishlistItems;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "catalog_product_relation", catalog = "lovefashion", joinColumns = {
			@JoinColumn(name = "parent_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "child_id", nullable = false, updatable = false) })
	public Set<CatalogProductEntity> getCatalogProductEntitiesForChildId() {
		return this.catalogProductEntitiesForChildId;
	}

	public void setCatalogProductEntitiesForChildId(Set<CatalogProductEntity> catalogProductEntitiesForChildId) {
		this.catalogProductEntitiesForChildId = catalogProductEntitiesForChildId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEntityDecimal> getCatalogProductEntityDecimals() {
		return this.catalogProductEntityDecimals;
	}

	public void setCatalogProductEntityDecimals(Set<CatalogProductEntityDecimal> catalogProductEntityDecimals) {
		this.catalogProductEntityDecimals = catalogProductEntityDecimals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogCategoryProduct> getCatalogCategoryProducts() {
		return this.catalogCategoryProducts;
	}

	public void setCatalogCategoryProducts(Set<CatalogCategoryProduct> catalogCategoryProducts) {
		this.catalogCategoryProducts = catalogCategoryProducts;
	}

}
