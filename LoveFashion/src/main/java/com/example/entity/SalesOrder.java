package com.example.entity;
// Generated Dec 19, 2015 11:20:12 PM by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SalesOrder generated by hbm2java
 */
@Entity
@Table(name = "sales_order", catalog = "lovefashion")
public class SalesOrder implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer entityId;
	private CustomerEntity customerEntity;
	private Store store;
	private String status;
	private String couponCode;
	private String shippingDescription;
	private BigDecimal totalWeight;
	private BigDecimal discountAmount;
	private BigDecimal discountCanceled;
	private BigDecimal discountInvoiced;
	private BigDecimal discountRefunded;
	private BigDecimal grandTotal;
	private BigDecimal shippingAmount;
	private BigDecimal shippingCanceled;
	private BigDecimal shippingInvoiced;
	private BigDecimal shippingRefunded;
	private BigDecimal subtotal;
	private BigDecimal subtotalCanceled;
	private BigDecimal subtotalInvoiced;
	private BigDecimal subtotalRefunded;
	private BigDecimal taxAmount;
	private BigDecimal taxCanceled;
	private BigDecimal taxInvoiced;
	private BigDecimal taxRefunded;
	private BigDecimal totalCanceled;
	private BigDecimal totalInvoiced;
	private BigDecimal totalOfflineRefunded;
	private BigDecimal totalOnlineRefunded;
	private BigDecimal totalPaid;
	private BigDecimal totalQtyOrdered;
	private BigDecimal totalRefunded;
	private Integer billingAddressId;
	private Integer shippingAddressId;
	private String customerEmail;
	private String customerFirstname;
	private String customerLastname;
	private String shippingMethod;
	private Date createdAt;
	private Date updatedAt;
	private short totalItemCount;
	private BigDecimal taxPercent;
	private String trackingNumbers;
	private Set<SalesOrderAddress> salesOrderAddresses = new HashSet<SalesOrderAddress>(0);
	private Set<SalesInvoice> salesInvoices = new HashSet<SalesInvoice>(0);
	private Set<SalesOrderStatusHistory> salesOrderStatusHistories = new HashSet<SalesOrderStatusHistory>(0);
	private Set<SalesOrderPayment> salesOrderPayments = new HashSet<SalesOrderPayment>(0);
	private Set<SalesCreditmemo> salesCreditmemos = new HashSet<SalesCreditmemo>(0);
	private Set<SalesShipment> salesShipments = new HashSet<SalesShipment>(0);
	private Set<SalesOrderItem> salesOrderItems = new HashSet<SalesOrderItem>(0);
	private Set<SalesPaymentTransaction> salesPaymentTransactions = new HashSet<SalesPaymentTransaction>(0);

	public SalesOrder() {
	}

	public SalesOrder(short totalItemCount) {
		this.totalItemCount = totalItemCount;
	}

	public SalesOrder(CustomerEntity customerEntity, Store store, String status, String couponCode,
			String shippingDescription, BigDecimal totalWeight, BigDecimal discountAmount, BigDecimal discountCanceled,
			BigDecimal discountInvoiced, BigDecimal discountRefunded, BigDecimal grandTotal, BigDecimal shippingAmount,
			BigDecimal shippingCanceled, BigDecimal shippingInvoiced, BigDecimal shippingRefunded, BigDecimal subtotal,
			BigDecimal subtotalCanceled, BigDecimal subtotalInvoiced, BigDecimal subtotalRefunded, BigDecimal taxAmount,
			BigDecimal taxCanceled, BigDecimal taxInvoiced, BigDecimal taxRefunded, BigDecimal totalCanceled,
			BigDecimal totalInvoiced, BigDecimal totalOfflineRefunded, BigDecimal totalOnlineRefunded,
			BigDecimal totalPaid, BigDecimal totalQtyOrdered, BigDecimal totalRefunded, Integer billingAddressId,
			Integer shippingAddressId, String customerEmail, String customerFirstname, String customerLastname,
			String shippingMethod, Date createdAt, Date updatedAt, short totalItemCount, BigDecimal taxPercent,
			String trackingNumbers, Set<SalesOrderAddress> salesOrderAddresses, Set<SalesInvoice> salesInvoices,
			Set<SalesOrderStatusHistory> salesOrderStatusHistories, Set<SalesOrderPayment> salesOrderPayments,
			Set<SalesCreditmemo> salesCreditmemos, Set<SalesShipment> salesShipments,
			Set<SalesOrderItem> salesOrderItems, Set<SalesPaymentTransaction> salesPaymentTransactions) {
		this.customerEntity = customerEntity;
		this.store = store;
		this.status = status;
		this.couponCode = couponCode;
		this.shippingDescription = shippingDescription;
		this.totalWeight = totalWeight;
		this.discountAmount = discountAmount;
		this.discountCanceled = discountCanceled;
		this.discountInvoiced = discountInvoiced;
		this.discountRefunded = discountRefunded;
		this.grandTotal = grandTotal;
		this.shippingAmount = shippingAmount;
		this.shippingCanceled = shippingCanceled;
		this.shippingInvoiced = shippingInvoiced;
		this.shippingRefunded = shippingRefunded;
		this.subtotal = subtotal;
		this.subtotalCanceled = subtotalCanceled;
		this.subtotalInvoiced = subtotalInvoiced;
		this.subtotalRefunded = subtotalRefunded;
		this.taxAmount = taxAmount;
		this.taxCanceled = taxCanceled;
		this.taxInvoiced = taxInvoiced;
		this.taxRefunded = taxRefunded;
		this.totalCanceled = totalCanceled;
		this.totalInvoiced = totalInvoiced;
		this.totalOfflineRefunded = totalOfflineRefunded;
		this.totalOnlineRefunded = totalOnlineRefunded;
		this.totalPaid = totalPaid;
		this.totalQtyOrdered = totalQtyOrdered;
		this.totalRefunded = totalRefunded;
		this.billingAddressId = billingAddressId;
		this.shippingAddressId = shippingAddressId;
		this.customerEmail = customerEmail;
		this.customerFirstname = customerFirstname;
		this.customerLastname = customerLastname;
		this.shippingMethod = shippingMethod;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.totalItemCount = totalItemCount;
		this.taxPercent = taxPercent;
		this.trackingNumbers = trackingNumbers;
		this.salesOrderAddresses = salesOrderAddresses;
		this.salesInvoices = salesInvoices;
		this.salesOrderStatusHistories = salesOrderStatusHistories;
		this.salesOrderPayments = salesOrderPayments;
		this.salesCreditmemos = salesCreditmemos;
		this.salesShipments = salesShipments;
		this.salesOrderItems = salesOrderItems;
		this.salesPaymentTransactions = salesPaymentTransactions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "entity_id", unique = true, nullable = false)
	public Integer getEntityId() {
		return this.entityId;
	}

	public void setEntityId(Integer entityId) {
		this.entityId = entityId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_id")
	public CustomerEntity getCustomerEntity() {
		return this.customerEntity;
	}

	public void setCustomerEntity(CustomerEntity customerEntity) {
		this.customerEntity = customerEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "store_id")
	public Store getStore() {
		return this.store;
	}

	public void setStore(Store store) {
		this.store = store;
	}

	@Column(name = "status", length = 32)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "coupon_code")
	public String getCouponCode() {
		return this.couponCode;
	}

	public void setCouponCode(String couponCode) {
		this.couponCode = couponCode;
	}

	@Column(name = "shipping_description")
	public String getShippingDescription() {
		return this.shippingDescription;
	}

	public void setShippingDescription(String shippingDescription) {
		this.shippingDescription = shippingDescription;
	}

	@Column(name = "total_weight", precision = 12, scale = 4)
	public BigDecimal getTotalWeight() {
		return this.totalWeight;
	}

	public void setTotalWeight(BigDecimal totalWeight) {
		this.totalWeight = totalWeight;
	}

	@Column(name = "discount_amount", precision = 12, scale = 4)
	public BigDecimal getDiscountAmount() {
		return this.discountAmount;
	}

	public void setDiscountAmount(BigDecimal discountAmount) {
		this.discountAmount = discountAmount;
	}

	@Column(name = "discount_canceled", precision = 12, scale = 4)
	public BigDecimal getDiscountCanceled() {
		return this.discountCanceled;
	}

	public void setDiscountCanceled(BigDecimal discountCanceled) {
		this.discountCanceled = discountCanceled;
	}

	@Column(name = "discount_invoiced", precision = 12, scale = 4)
	public BigDecimal getDiscountInvoiced() {
		return this.discountInvoiced;
	}

	public void setDiscountInvoiced(BigDecimal discountInvoiced) {
		this.discountInvoiced = discountInvoiced;
	}

	@Column(name = "discount_refunded", precision = 12, scale = 4)
	public BigDecimal getDiscountRefunded() {
		return this.discountRefunded;
	}

	public void setDiscountRefunded(BigDecimal discountRefunded) {
		this.discountRefunded = discountRefunded;
	}

	@Column(name = "grand_total", precision = 12, scale = 4)
	public BigDecimal getGrandTotal() {
		return this.grandTotal;
	}

	public void setGrandTotal(BigDecimal grandTotal) {
		this.grandTotal = grandTotal;
	}

	@Column(name = "shipping_amount", precision = 12, scale = 4)
	public BigDecimal getShippingAmount() {
		return this.shippingAmount;
	}

	public void setShippingAmount(BigDecimal shippingAmount) {
		this.shippingAmount = shippingAmount;
	}

	@Column(name = "shipping_canceled", precision = 12, scale = 4)
	public BigDecimal getShippingCanceled() {
		return this.shippingCanceled;
	}

	public void setShippingCanceled(BigDecimal shippingCanceled) {
		this.shippingCanceled = shippingCanceled;
	}

	@Column(name = "shipping_invoiced", precision = 12, scale = 4)
	public BigDecimal getShippingInvoiced() {
		return this.shippingInvoiced;
	}

	public void setShippingInvoiced(BigDecimal shippingInvoiced) {
		this.shippingInvoiced = shippingInvoiced;
	}

	@Column(name = "shipping_refunded", precision = 12, scale = 4)
	public BigDecimal getShippingRefunded() {
		return this.shippingRefunded;
	}

	public void setShippingRefunded(BigDecimal shippingRefunded) {
		this.shippingRefunded = shippingRefunded;
	}

	@Column(name = "subtotal", precision = 12, scale = 4)
	public BigDecimal getSubtotal() {
		return this.subtotal;
	}

	public void setSubtotal(BigDecimal subtotal) {
		this.subtotal = subtotal;
	}

	@Column(name = "subtotal_canceled", precision = 12, scale = 4)
	public BigDecimal getSubtotalCanceled() {
		return this.subtotalCanceled;
	}

	public void setSubtotalCanceled(BigDecimal subtotalCanceled) {
		this.subtotalCanceled = subtotalCanceled;
	}

	@Column(name = "subtotal_invoiced", precision = 12, scale = 4)
	public BigDecimal getSubtotalInvoiced() {
		return this.subtotalInvoiced;
	}

	public void setSubtotalInvoiced(BigDecimal subtotalInvoiced) {
		this.subtotalInvoiced = subtotalInvoiced;
	}

	@Column(name = "subtotal_refunded", precision = 12, scale = 4)
	public BigDecimal getSubtotalRefunded() {
		return this.subtotalRefunded;
	}

	public void setSubtotalRefunded(BigDecimal subtotalRefunded) {
		this.subtotalRefunded = subtotalRefunded;
	}

	@Column(name = "tax_amount", precision = 12, scale = 4)
	public BigDecimal getTaxAmount() {
		return this.taxAmount;
	}

	public void setTaxAmount(BigDecimal taxAmount) {
		this.taxAmount = taxAmount;
	}

	@Column(name = "tax_canceled", precision = 12, scale = 4)
	public BigDecimal getTaxCanceled() {
		return this.taxCanceled;
	}

	public void setTaxCanceled(BigDecimal taxCanceled) {
		this.taxCanceled = taxCanceled;
	}

	@Column(name = "tax_invoiced", precision = 12, scale = 4)
	public BigDecimal getTaxInvoiced() {
		return this.taxInvoiced;
	}

	public void setTaxInvoiced(BigDecimal taxInvoiced) {
		this.taxInvoiced = taxInvoiced;
	}

	@Column(name = "tax_refunded", precision = 12, scale = 4)
	public BigDecimal getTaxRefunded() {
		return this.taxRefunded;
	}

	public void setTaxRefunded(BigDecimal taxRefunded) {
		this.taxRefunded = taxRefunded;
	}

	@Column(name = "total_canceled", precision = 12, scale = 4)
	public BigDecimal getTotalCanceled() {
		return this.totalCanceled;
	}

	public void setTotalCanceled(BigDecimal totalCanceled) {
		this.totalCanceled = totalCanceled;
	}

	@Column(name = "total_invoiced", precision = 12, scale = 4)
	public BigDecimal getTotalInvoiced() {
		return this.totalInvoiced;
	}

	public void setTotalInvoiced(BigDecimal totalInvoiced) {
		this.totalInvoiced = totalInvoiced;
	}

	@Column(name = "total_offline_refunded", precision = 12, scale = 4)
	public BigDecimal getTotalOfflineRefunded() {
		return this.totalOfflineRefunded;
	}

	public void setTotalOfflineRefunded(BigDecimal totalOfflineRefunded) {
		this.totalOfflineRefunded = totalOfflineRefunded;
	}

	@Column(name = "total_online_refunded", precision = 12, scale = 4)
	public BigDecimal getTotalOnlineRefunded() {
		return this.totalOnlineRefunded;
	}

	public void setTotalOnlineRefunded(BigDecimal totalOnlineRefunded) {
		this.totalOnlineRefunded = totalOnlineRefunded;
	}

	@Column(name = "total_paid", precision = 12, scale = 4)
	public BigDecimal getTotalPaid() {
		return this.totalPaid;
	}

	public void setTotalPaid(BigDecimal totalPaid) {
		this.totalPaid = totalPaid;
	}

	@Column(name = "total_qty_ordered", precision = 12, scale = 4)
	public BigDecimal getTotalQtyOrdered() {
		return this.totalQtyOrdered;
	}

	public void setTotalQtyOrdered(BigDecimal totalQtyOrdered) {
		this.totalQtyOrdered = totalQtyOrdered;
	}

	@Column(name = "total_refunded", precision = 12, scale = 4)
	public BigDecimal getTotalRefunded() {
		return this.totalRefunded;
	}

	public void setTotalRefunded(BigDecimal totalRefunded) {
		this.totalRefunded = totalRefunded;
	}

	@Column(name = "billing_address_id")
	public Integer getBillingAddressId() {
		return this.billingAddressId;
	}

	public void setBillingAddressId(Integer billingAddressId) {
		this.billingAddressId = billingAddressId;
	}

	@Column(name = "shipping_address_id")
	public Integer getShippingAddressId() {
		return this.shippingAddressId;
	}

	public void setShippingAddressId(Integer shippingAddressId) {
		this.shippingAddressId = shippingAddressId;
	}

	@Column(name = "customer_email")
	public String getCustomerEmail() {
		return this.customerEmail;
	}

	public void setCustomerEmail(String customerEmail) {
		this.customerEmail = customerEmail;
	}

	@Column(name = "customer_firstname")
	public String getCustomerFirstname() {
		return this.customerFirstname;
	}

	public void setCustomerFirstname(String customerFirstname) {
		this.customerFirstname = customerFirstname;
	}

	@Column(name = "customer_lastname")
	public String getCustomerLastname() {
		return this.customerLastname;
	}

	public void setCustomerLastname(String customerLastname) {
		this.customerLastname = customerLastname;
	}

	@Column(name = "shipping_method")
	public String getShippingMethod() {
		return this.shippingMethod;
	}

	public void setShippingMethod(String shippingMethod) {
		this.shippingMethod = shippingMethod;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "total_item_count", nullable = false)
	public short getTotalItemCount() {
		return this.totalItemCount;
	}

	public void setTotalItemCount(short totalItemCount) {
		this.totalItemCount = totalItemCount;
	}

	@Column(name = "tax_percent", precision = 12, scale = 4)
	public BigDecimal getTaxPercent() {
		return this.taxPercent;
	}

	public void setTaxPercent(BigDecimal taxPercent) {
		this.taxPercent = taxPercent;
	}

	@Column(name = "tracking_numbers", length = 65535)
	public String getTrackingNumbers() {
		return this.trackingNumbers;
	}

	public void setTrackingNumbers(String trackingNumbers) {
		this.trackingNumbers = trackingNumbers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	public Set<SalesOrderAddress> getSalesOrderAddresses() {
		return this.salesOrderAddresses;
	}

	public void setSalesOrderAddresses(Set<SalesOrderAddress> salesOrderAddresses) {
		this.salesOrderAddresses = salesOrderAddresses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	public Set<SalesInvoice> getSalesInvoices() {
		return this.salesInvoices;
	}

	public void setSalesInvoices(Set<SalesInvoice> salesInvoices) {
		this.salesInvoices = salesInvoices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	public Set<SalesOrderStatusHistory> getSalesOrderStatusHistories() {
		return this.salesOrderStatusHistories;
	}

	public void setSalesOrderStatusHistories(Set<SalesOrderStatusHistory> salesOrderStatusHistories) {
		this.salesOrderStatusHistories = salesOrderStatusHistories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	public Set<SalesOrderPayment> getSalesOrderPayments() {
		return this.salesOrderPayments;
	}

	public void setSalesOrderPayments(Set<SalesOrderPayment> salesOrderPayments) {
		this.salesOrderPayments = salesOrderPayments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	public Set<SalesCreditmemo> getSalesCreditmemos() {
		return this.salesCreditmemos;
	}

	public void setSalesCreditmemos(Set<SalesCreditmemo> salesCreditmemos) {
		this.salesCreditmemos = salesCreditmemos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	public Set<SalesShipment> getSalesShipments() {
		return this.salesShipments;
	}

	public void setSalesShipments(Set<SalesShipment> salesShipments) {
		this.salesShipments = salesShipments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	public Set<SalesOrderItem> getSalesOrderItems() {
		return this.salesOrderItems;
	}

	public void setSalesOrderItems(Set<SalesOrderItem> salesOrderItems) {
		this.salesOrderItems = salesOrderItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	public Set<SalesPaymentTransaction> getSalesPaymentTransactions() {
		return this.salesPaymentTransactions;
	}

	public void setSalesPaymentTransactions(Set<SalesPaymentTransaction> salesPaymentTransactions) {
		this.salesPaymentTransactions = salesPaymentTransactions;
	}

}
